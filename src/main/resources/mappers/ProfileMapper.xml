<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.soo.helloworld.mapper.ProfileMapper">
    <resultMap id="userProfileMap" type="me.soo.helloworld.model.user.UserDataOnProfile">
        <constructor>
            <idArg column="userId" javaType="String"/>
            <arg column="gender" javaType="String"/>
            <arg column="age" javaType="_int"/>
            <arg column="profileImageName" javaType="String"/>
            <arg column="profileImagePath" javaType="String"/>
            <arg column="aboutMe" javaType="String"/>
            <arg column="originCountry" javaType="_int"/>
            <arg column="livingCountry" javaType="_int"/>
            <arg column="livingTown" javaType="_int"/>
        </constructor>
        <result property="userId" column="userId"/>
        <result property="gender" column="gender"/>
        <result property="age" column="age"/>
        <result property="profileImageName" column="profileImageName"/>
        <result property="profileImagePath" column="profileImagePath"/>
        <result property="aboutMe" column="aboutMe"/>
        <result property="originCountryId" column="originCountry"/>
        <result property="livingCountryId" column="livingCountry"/>
        <result property="livingTownId" column="livingTown"/>
        <collection property="languages" ofType="me.soo.helloworld.model.language.LanguageDataForProfile" resultMap="languageDataMap"/>
    </resultMap>

    <resultMap type="me.soo.helloworld.model.language.LanguageDataForProfile" id="languageDataMap">
        <constructor>
            <idArg column="langId" javaType="_int"/>
            <arg column="level" javaType="me.soo.helloworld.enumeration.LanguageLevel"/>
            <arg column="status" javaType="me.soo.helloworld.enumeration.LanguageStatus"/>
        </constructor>
        <result property="id" column="langId"/>
        <result property="level" column="level"/>
        <result property="status" column="status"/>
    </resultMap>

    <select id="getUserProfileData" resultMap="userProfileMap">
        SELECT
            u.userId AS userId,
            u.gender AS gender,
            FORMAT(DATEDIFF(CURDATE(), u.birthDay) / 365.25, 0) AS age,
            u.profileImageName AS profileImageName,
            u.profileImagePath AS profileImagePath,
            u.aboutMe AS aboutMe,
            u.originCountry AS originCountry,
            u.livingCountry AS livingCountry,
            u.livingTown AS livingTown,
            s.langId AS langId,
            s.level AS level,
            s.status AS status
        FROM speak AS s
            INNER JOIN users AS u ON s.userId = u.userId
        WHERE u.userId = #{targetId}
            AND u.isDeactivated = 'N'
            AND NOT EXISTS (SELECT blockId FROM block WHERE blockId = #{userId} AND blockedBy = #{targetId})
    </select>

    <resultMap id="getUserProfilesMap" type="me.soo.helloworld.model.user.UserProfiles">
        <constructor>
            <idArg column="id" javaType="_int"/>
            <arg column="userId" javaType="String"/>
            <arg column="aboutMe" javaType="String"/>
            <arg column="profileImageName" javaType="String"/>
            <arg column="profileImagePath" javaType="String"/>
        </constructor>
        <result property="id" column="id"/>
        <result property="userId" column="userId"/>
        <result property="aboutMe" column="aboutMe"/>
        <result property="profileImageName" column="profileImageName"/>
        <result property="profileImagePath" column="profileImagePath"/>
        <result property="recommendationNums" column="recommendationNums" />
    </resultMap>

    <select id="getUserProfiles" parameterType="map"
            resultMap="getUserProfilesMap">
        SELECT
               u.id AS id,
               u.userId AS userId,
               u.aboutMe AS aboutMe,
               u.profileImageName AS profileImageName,
               u.profileImagePath AS profileImagePath,
               COUNT(r.recomTo) AS recommendationNums
        FROM users AS u
            LEFT OUTER JOIN recommendations AS r ON u.userId = r.recomTo
        WHERE
        <if test="pagination.cursor != null">
            u.id <![CDATA[<]]> #{pagination.cursor} AND
        </if>
        u.isDeactivated = 'N'
        AND u.userId NOT IN (SELECT blockedBy FROM block WHERE blockId = #{userId})
        GROUP BY u.id
        ORDER BY u.id DESC
        LIMIT #{pagination.pageSize}
    </select>

    <select id="searchUserProfiles" resultMap="getUserProfilesMap">
        SELECT
            u.id AS id,
            u.userId AS userId,
            u.aboutMe AS aboutMe,
            u.profileImageName AS profileImageName,
            u.profileImagePath AS profileImagePath
        FROM users AS u
            INNER JOIN speak s ON u.userId = s.userId
            INNER JOIN speak l ON u.userId = l.userId
        WHERE
        <if test="pagination.cursor != null">
            u.id <![CDATA[<]]> #{pagination.cursor} AND
        </if>
        <if test="conditions.gender != null">
            u.gender = #{conditions.gender} AND
        </if>
        <choose>
            <when test="conditions.minAge != null and conditions.maxAge == null">
                (FORMAT(DATEDIFF(CURDATE(), u.birthDay) / 365.25, 0) BETWEEN #{conditions.minAge} AND #{defaultMaxAge}) AND
            </when>
            <when test="conditions.minAge == null and conditions.maxAge != null">
                (FORMAT(DATEDIFF(CURDATE(), u.birthDay) / 365.25, 0) BETWEEN #{defaultMinAge} AND #{conditions.maxAge}) AND
            </when>
            <when test="conditions.minAge != null and conditions.maxAge != null">
                (FORMAT(DATEDIFF(CURDATE(), u.birthDay) / 365.25, 0) BETWEEN #{conditions.minAge} AND #{conditions.maxAge}) AND
            </when>
        </choose>
        <if test="conditions.originCountry != null">
            u.originCountry = #{conditions.originCountry} AND
        </if>
        <if test="conditions.livingCountry != null">
            u.livingCountry = #{conditions.livingCountry} AND
        </if>
        <if test="conditions.livingTown != null">
            u.livingTown = #{conditions.livingTown} AND
        </if>
            u.isDeactivated = 'N' AND
            u.userId NOT IN (SELECT blockedBy FROM block WHERE blockId = #{currentUser}) AND
            (s.langId = #{conditions.speakLanguage} AND
             s.status IN (2, 3)) AND
            (l.langId = #{conditions.learningLanguage} AND
             l.level IN <foreach collection="conditions.learningLanguageLevel" item="level" open="(" close=")" separator=","> #{level} </foreach> AND
             l.status = 1)
        ORDER BY u.id DESC
        LIMIT #{pagination.pageSize}
    </select>
</mapper>